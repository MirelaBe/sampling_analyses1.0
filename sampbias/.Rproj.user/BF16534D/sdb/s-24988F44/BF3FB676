{
    "contents" : "BReplicate <- function(x, reps = 10, samp.outp.path, \n                       sim.outp.path, verb = T, \n                       sim.type = c(\"random\", \"regular\",\"stratified\",\n                                    \"nonaligned\", \"hexagonal\",\"clustered\",\n                                    \"Fibonacci\"),\n                       sim.method = c(\"convexhull\", \"rectangle\", \n                                        \"polygon\", \"intersect\"),\n                       sim.extent = c(\"regional\", \"global\"), \n                       sim.model = c(\"planar\", \"spheric\"), ...){\n  #calculate SampBiasLarge for X\n  sampl.x <- SamplingBiasLarge(x, outp.path = samp.outp.path, ...)\n  out <- list()\n  for(i in 1:reps){\n    simul.coords <- SimCoordsLarge(x, sim.outp.path, type = sim.type, \n                                   method = sim.method, \n                                   extent = sim.extent, model = sim.model)\n    simul.sampb <- SamplingBiasLarge(simul.coords, outp.path = samp.outp.path, ...)\n    eva <- BiasEval(simul.coords, simul.sampb)\n    out[[i]] <- eva\n  }\n  class(out) <- c(\"samp.bias.list\", class(out))\n  return(out)\n  \n}\n  ",
    "created" : 1448489527619.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1072737503",
    "id" : "BF3FB676",
    "lastKnownWriteTime" : 1441710624,
    "path" : "C:/Users/xzizal/Desktop/GitHub/sampbias/R/BReplicate.R",
    "project_path" : "R/BReplicate.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 9,
    "source_on_save" : false,
    "type" : "r_source"
}